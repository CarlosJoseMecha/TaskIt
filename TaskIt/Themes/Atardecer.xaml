<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    <!-- Botones minimizar, maximizar, cerrar -->
    <PathGeometry x:Key="minimize" Figures="M19 13H5a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2z"/>
    <PathGeometry x:Key="maximize" Figures="M18 21H6a3 3 0 0 1-3-3V6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3zM6 5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1z"/>
    <PathGeometry x:Key="restore" Figures="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm1 15a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1z M15 11H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2z"/>
    <PathGeometry x:Key="close" Figures="M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/>

    <!-- Colores Background  -->
    <SolidColorBrush x:Key="BackgroundPrimario" Color="#D07FA6" />
    <SolidColorBrush x:Key="BackgroundSecundario" Color="#FFCE6D"/>
    <SolidColorBrush x:Key="BackgroundTerciario" Color="#9A76A5"/>
    <SolidColorBrush x:Key="BackgroundCuaternario" Color="#FFA880"/>

    <!-- Gradient oscuro  -->
    <LinearGradientBrush x:Key="CustomGradientBrushDark" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFA880" Offset="0"/>
        <GradientStop Color="#9A76A5" Offset="0.5"/>
        <GradientStop Color="#4E6C9D" Offset="1"/>
    </LinearGradientBrush>

    <!-- Gradient claro  -->
    <LinearGradientBrush x:Key="CustomGradientBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#FFA880" Offset="0"/>
        <GradientStop Color="#9A76A5" Offset="0.5"/>
        <GradientStop Color="#4E6C9D" Offset="1"/>
    </LinearGradientBrush>

    <!-- Gradient activo  -->
    <LinearGradientBrush x:Key="CustomGradientBrushActivo" StartPoint="1,0" EndPoint="0,1" >
        <GradientStop Color="#F9F871" Offset="0"/>
        <GradientStop Color="#FFA880" Offset="1"/>
    </LinearGradientBrush>

    <!-- Gradient Items Listbox  -->
    <LinearGradientBrush x:Key="CustomGradientBrushItem" StartPoint="1,0" EndPoint="0,1" >
        <GradientStop Color="#9A76A5" Offset="1"/>
        <GradientStop Color="#D07FA6" Offset="0"/>
    </LinearGradientBrush>

    <!-- Colores primarios -->
    <SolidColorBrush x:Key="ColorPrimario" Color="#926559"/>
    <SolidColorBrush x:Key="ColorSecundario" Color="#F9E79F"/>
    <SolidColorBrush x:Key="ColorTerciario" Color="#F9E79F"/>

    <!-- Colores Texto -->
    <SolidColorBrush x:Key="TextoPrimario" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TextoSecundario" Color="#9A76A5"/>

    <!-- Colores Iconos -->
    <SolidColorBrush x:Key="IconoPrimario" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="IconoSecuandario" Color="#9A76A5"/>

    <SolidColorBrush x:Key="btnClose" Color="#F72626"/>

    <!-- Botones minimizar, maximizar, cerrar -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="{DynamicResource TextoSecundario}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundTerciario}"/>
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource TextoPrimario}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource btnClose}"/>
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource TextoPrimario}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource TextoSecundario}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Estilos barra superior -->
    <Style x:Key="btnMenuTop" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <!--color texto-->
        <Setter Property="Foreground" Value="{DynamicResource TextoPrimario}"/>
        <Setter Property="Margin" Value="5 0 0 0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundSecundario}"/>
                <Setter Property="Foreground" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Boton añadir -->
    <Style x:Key="btnAñadir" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundSecundario}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextoSecundario}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter.Content>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Margin="5 0 5 1">Añadir</TextBlock>
                                    <fa:IconImage Icon="Plus" Style="{DynamicResource iconoPlus}" />
                                </StackPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundTerciario}"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="15">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ContentPresenter.Content>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <TextBlock Margin="5 0 5 1" Foreground="{DynamicResource TextoPrimario}">Añadir</TextBlock>
                                            <fa:IconImage Icon="Plus" Style="{DynamicResource iconoPlus}" Foreground="{DynamicResource TextoPrimario}" />
                                        </StackPanel>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="iconoPlus" TargetType="fa:IconImage">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Foreground" Value="{DynamicResource TextoSecundario}"/>
    </Style>

    <!-- Estilos menu -->
    <Style x:Key="btnMenu" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorSecundario}"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Tag" Value="{DynamicResource ColorSecundario}"/>
        <!--color icono-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="Tag" Value="{DynamicResource ColorSecundario}"/>
                <!--color barrita izq hover-->
                <Setter Property="Background" Value="{DynamicResource CustomGradientBrushActivo}">
                    <!--gradient del hover-->
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="{DynamicResource ColorSecundario}">
                                <!--barrita izq boton menu-->
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="btnMenuIcono" TargetType="fa:IconImage">
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="35 0 20 0"/>
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
    </Style>

    <Style x:Key="txtMenu" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
    </Style>

    <!-- Estilos active -->
    <Style x:Key="btnMenuActive" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource CustomGradientBrushActivo}"/>
        <Setter Property="Foreground" Value="#926559"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Tag" Value="{DynamicResource ColorSecundario}"/>
        <!--color icono active-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#F9F871">
                        <!--color barra izq activo-->
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnMenuIconoActive" TargetType="fa:IconImage">
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="35 0 20 0"/>
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
    </Style>

    <Style x:Key="txtMenuActive" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
    </Style>


    <!--ESTILOS NUEVA TAREA DIALOGO-->
    <!--Estilo text box con corner radius-->
    <Style x:Key="textBoxRedondeado" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderBrush" Value="#999"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#333"/>
        <Setter Property="Background" Value="#fff"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Estilo datePicker con corner radius-->
    <Style x:Key="datePickerReondeado" TargetType="{x:Type DatePicker}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderBrush" Value="#999"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#333"/>
        <Setter Property="Background" Value="#fff"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- Estilo labels -->
    <Style x:Key="labelBlanco" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#fff"/>
    </Style>

    <!-- Color hover botones-->
    <ControlTemplate x:Key="NoMouseOverButtonTemplate"   
                 TargetType="Button">
        <Border Background="{TemplateBinding Background}"  
          BorderBrush="{TemplateBinding BorderBrush}"  
          BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"  
             Value="False">
                <Setter Property="Background"  
              Value="{x:Static SystemColors.ControlLightBrush}" />
                <Setter Property="Foreground"  
              Value="{x:Static SystemColors.GrayTextBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Color hover iconos control-->
    <Style x:Key="controlIconMouseOver" TargetType="fa:IconImage">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="#fff"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo subrayado de mas detalles -->
    <Style x:Key="underlineText" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Estilo del cubo de basura de cada elemento de la lista -->
    <Style x:Key="deleteSelected" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <fa:IconImage x:Name="Icon" Icon="Trash" Foreground="#fff" Height="18" Style="{StaticResource controlIconMouseOver}"/>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                            <Setter TargetName="Icon" Property="Foreground" Value="Red" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Estilos botones ventana nueva tarea -->
    <Style x:Key="btn-custom" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundCuaternario}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextoPrimario}"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundSecundario}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextoPrimario}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>